Права доступа и пользователи

## Пользователь — ключевое понятие организации системы доступа в Linux. Когда
пользователь регистрируется в системе, то есть проходит процедуру авторизации,
например, вводя системное имя и пароль, он идентифицируется с учётной записью. В
ней система хранит информацию о каждом пользователе: его системное имя и
некоторые другие сведения, необходимые для работы с ним.
Именно с учётными записями, а не с самими пользователями, и работает система.
Ниже приведён список этих сведений.
## Учётная запись — хранимая в компьютерной системе совокупность данных о
пользователе, необходимая для его опознавания (аутентификации) и предоставления
доступа к его личным данным и настройкам.
## Права доступа — совокупность правил, регламентирующих порядок и условия
доступа субъекта к объектам информационной системы.
## Группа пользователей — именованное множество пользователей с одинаковыми
правами доступа к тем или иным объектам.


Суперпользователь
(root)
● UID = 0
● Home /root
● Пароль не всегда
● Есть shell
● Неограниченные полномочия

UID — идентификатор пользователя. Операционная система различает пользователей именно по UID, а не, например, по логину.
UID — это число из диапазона от 0 до 65535, при этом UID 0 назначается суперпользователю.
GID — идентификатор группы пользователей. Каждый пользователь в ОС Linux
принадлежит как минимум к одной группе — группе по умолчанию, которая создаётся
одновременно с учётной записью пользователя и как правило совпадает с именем
пользователя.

Обычный пользователь
(user)
● UID > 1000
● Home /home/user
● Пароль установлен
● Есть shell
● Доступ в рамках домашней директории

Системный пользователь
(daemon)
● 1 < UID < 1000
● Home Любая
● Пароля нет
● Нет shell
● Ограниченный доступ

Атрибуты пользователя:
● UID – user ID
● GID – group ID
● Домашняя директория (home)
● Логин (login)
● Пароль (password)
● Оболочка (shell)

Пользователь в Ubuntu:
● 1000
● 1000
● /home/{user}
● {user}
● *****
● /bin/bash


Хранение данных о пользователях:
● /etc/passwd – список пользователей
    Если перечислить все свойства слева направо, получим:
    1. логин пользователя;
    2. пароль (не используется);
    3. UID;
    4. GID (основная группа);
    5. полное имя пользователя и дополнительные поля;
    6. путь к оболочке.
● /etc/group – группы пользователей
    Поля:
    1. имя группы;
    2. пароль группы (не используется);
    3. GID (идентификатор группы);
    4. список членов группы (через запятую).
● /etc/shadow – пароли пользователей
    Поля слева направо:
    1. логин пользователя;
    2. пароль (в защищённом виде);
    3. дата последнего изменения пароля;
    4. минимальное число дней между изменениями паролей;
    5. максимальное время жизни пароля;
    6. количество дней до истечения срока действия пароля;
    7. количество дней после истечения срока действия пароля, когда учётная
    запись будет отключена;
    8. срок действия учетной записи.


Управление пользователями:
● useradd – создание пользователя
        useradd -s /bin/bash -m -d /home/testuser testuser
● adduser – создание пользователя (скрипт)
● usermod – изменение пользователя
● userdel – удаление пользователя
● passwd – изменение пароля
        sudo passwd testuser
● chage – изменение свойств пароля
● groupadd – создание группы
● groupdel – удаление группы

Механизм sudo и su:
● su – переключение пользователя
● sudo su – переключение на
суперпользователя (root)
● sudo – выполнение команды с правами
суперпользователя
● /etc/sudoers – конфигурация sudo
● visudo – редактирование

## su — команда, которая позволяет переключаться в пользователя (switch user,
substitute user) или делает пользователя суперпользователем, при этом не завершая
сеанс. Синтаксис: su - user_name — далее вводится пароль и меняется ID текущего
пользователя. su - без параметров переключит текущего пользователя в
суперпользователя. Данный метод работы под суперпользователем не очень хорош,
так как нет никаких ограничений.
## sudo — утилита, которая позволит выполнять административные действия в системе
согласно настройкам в файле /etc/sudoers. Файл /etc/sudoers редактируется только
пользователем, имеющим права администратора системы. В этом файле
перечисляется набор административных команд, которые разрешено выполнять
пользователю или группе пользователей. В Ubuntu пользователи, входящие в группу
sudo, могут выполнять административные действия без каких-либо ограничений. Не
рекомендуется злоупотреблять количеством участников данной группы.

Файл /etc/sudoers должен редактироваться или командой visudo, которая запускает
текстовый редактор и позволяет избежать большинства синтаксических ошибок.

Синтаксис записи в файле /etc/sudoers:
1. User_name ALL= full_path_to_command. Например, запись user ALL=
/usr/sbin/adduser позволит пользователю с именем user, используя sudo,
добавлять учётные записи в системе.
2. User_name ALL=(ALL) ALL позволит пользователю, используя утилиту sudo,
выполнять административные действия без ограничений.
3. %sudo ALL=(ALL) NOPASSWD:ALL позволит всем пользователям, входящим в
группу sudo, выполнять любые административные действия в системе без
подтверждения паролем. В целях безопасности не рекомендуется
использовать в многопользовательских решениях.


Изменение владельца и группы владельца файлов:
● chown – изменение владельца и группы
    ○ chown -R – рекурсивно
    ○ chown testuser:testgroup
    ○ chown testuser
● chgrp – изменение группы
    ○ chgrp -R –рекурсивно
    ○ chgrp testgroup


-rwxr-xr--
1. Владелец rwx
    ✖ совпадение пользователя
2. Группа r-x
    ✖ пользователь в группе
3. Остальные r--
    ✖ все остальные пользователи


Специальные биты:
-rwsr-sr-t
1. SUID 4000
    ✖ для исполняемых файлов
    ✖ запуск программы от имени владельца файла
2. SGID 2000
    ✖ для директорий
    ✖ создание файлов с группой, назначенной для директории
3. Sticky bit 1000
    ✖ для директорий
    ✖ удаление файлов только владельцем файла или директории


Изменение прав доступа:
● chmod — change mode, изменение прав доступа
    ○ chmod -R testdir/ – рекурсивно
    ○ chmod u=rwx,g=rx,o=r testfile – символьная форма
    ○ chmod 751 testfile – числовая форма
    ○ chmod a+x – изменение для всех
    ○ chmod 4755 – изменение специальных битов


Права по умолчанию и umask:
Полные права             666 777 
Значение umask           022 022
Права по умолчанию       644 755 

Биты прав доступа мы наблюдаем при вызове ls -l в первом столбце. Например:
-rw-rw-r–
Этот пример показывает обычный файл (-) с правами доступа rw (чтение и запись) для
владельца и группы, и r (чтение) для остальных.
Символы в блоках — это права доступа. Они расшифровываются следующим образом:
● r (read) — возможность открытия и чтения файла или просмотр содержимого
каталога.
● w (write) — возможность изменить содержимое файла или возможность
создавать, удалять или переименовывать объекты в каталоге.
● x (execute) — возможность выполнить файл (запустить программу, скрипт) или
возможность войти в каталог и получить атрибуты объектов.

Права доступа можно представить в численном виде, используя восьмеричную
систему счисления:
● 0 – нет битов;
● 1 – x;
● 2 – w;
● 3 – wx;
● 4 – r;
● 5 – rx;
● 6 – rw;
● 7 – rwx.




#################################################### 
Работа с пользователями

# Информация о пользователе
whoami

# В каких группах состоит текущий пользователь
groups

# Создание пользователя
sudo useradd -m -s /bin/bash user1

# Определяем пароль для пользователя
sudo passwd user1

# Параметры будут даны пользователю после создания по умолчанию
useradd -D

# Зайдём в оболочку под другим пользователем
su user1

# Проверим
whoami

# Выйти из сессии этого пользователя
exit

# удаление пользователя
whatis userdel
userdel -- help
userdel -fr user1

#заблокировать пользователя
sudo usermod –L user1
#разблокировать пользователя
sudo usermod –U user1

# дать пользователю права суперпользователя (root), добавив его в группу "sudo"
sudo usermod -G sudo user1



# переключимся в режим суперпользователя
sudo su
	В строке приглашения знак $ изменился на #

# убедимся, что мы работаем под суперпользователем
whoami

# в данном режиме не требуется для привилегированных операций каждый раз набирать префикс sudo
apt update

# выйдем из этого режима
exit

# в обычном режиме (без привилегий) команду обновления репозиториев надо выполнять с префиксом sudo, иначе получим ошибку нехватки прав
apt update
sudo apt update


# создать пользователя отдельно без пароля
sudo useradd -m -d /home/user2 -s /bin/bash user2


# зададим пароль пользователю
sudo passwd user1

# зайдем из-под него
su user1

# убедимся, что мы работаем под новым пользователем
whoami


# заглянем в файлик passwd
more /etc/passwd


# можно отфильтровать по имени пользователя
more /etc/passwd | grep ^user

# список групп
more /etc/group

# пароли (их хэши)
more /etc/shadow


# удалим с ключом  –f (force, принудительно)
sudo userdel –f user9


# создадим группу dev_team
groupadd dev_team
# проверим
more /etc/group | grep dev


# добавим в группу участника команды разработки (user11)
sudo usermod -G dev_team user11


#################################################### Права доступа
# Команда chmod
# Предоставить другим пользователям права на запись в файл header.txt
chmod o+w header.txt

# Можно менять несколько прав для ряда категорий
chmod go-rw header.txt

# Другие варианты работы с правами
chmod u+w,g+r header.txt
chmod -rw header.txt
chmod u=rwx,g=wr,o=r header.txt

# задание прав триадами цифр
•	0: (000) No permission.
•	1: (001) Execute permission.
•	2: (010) Write permission.
•	3: (011) Write and execute permissions.
•	4: (100) Read permission.
•	5: (101) Read and execute permissions.
•	6: (110) Read and write permissions.
•	7: (111) Read, write, and execute permissions.
chmod 770 header.txt
# ключ -R для задания рекурсивного изменения прав
chmod 777 -R ~/lesson3

# Изменяем владельца файла
sudo chown user1 header.txt
 

# Sticky bit нужен для запрета удаления файлов всем, кроме владельца
chmod +t filename


# установить флаг SUID
chmod u+s filename

# снять флаг SUID
chmod u-s filename


# установить флаг SGID 
chmod g+s filename

# снять флаг SGID
chmod g-s filename


#################################################### Смена владельца
# Команда chown
# Изменяет владельцев файла или папки, а также группу владельцев

# сменим владельца файла f1
sudo chown user2 f1

# сменим группу владельцев 
sudo chown :dev_team f1

# сменим одновременно владельца и группу владельцев
sudo chown student:student –R .

