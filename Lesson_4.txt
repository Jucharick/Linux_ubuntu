Установка пакетов, репозитории.Планировщик cron
###############################################


# Репозиторий — место, где хранятся и поддерживаются какие-либо данные. Чаще
всего данные в репозитории хранятся в виде файлов, доступных для дальнейшего
распространения по сети.

# Пакет — под пакетами в Linux подразумевается программное обеспечение, которое
можно установить, то есть набор файлов, объединенных для выполнения
определённого функционала. Пакеты как правило хранятся в репозиториях.

# PPA (сокр. от англ. Personal Packages Archive) — персональный архив пакетов. В
отличие от других репозиториев Ubuntu, PPA-репозиторий содержит версии только
какой-то одной программы.

# apt — программа для установки, обновления и удаления программных пакетов в
операционных системах Debian и основанных на них. В Apt есть коровья суперсила.

# dpkg — это пакетный менеджер для Debian-систем. Он может устанавливать, удалять
и создавать пакеты, но, в отличие от других систем управления пакетами, не может
автоматически загружать и устанавливать пакеты или их зависимости.

# Snap — это пакет, который, помимо готовой сборки самого приложения, включает в
себя все необходимые зависимости и может работать почти в любом дистрибутиве
Linux.

# Планировщик заданий — программа (служба или демон), часто называемая
сервисом операционной системы, которая запускает другие программы в зависимости
от различных критериев, таких как, например, наступление определенного времени.


Классификация репозиториев
###############################################

Обновления и программное обеспечение в Linux-системах устанавливаются из
репозиториев. Репозиторий — это хранилище пакетов, то есть файлов и библиотек,
которые мы можем установить в ОС. Репозиторий может быть размещён локально,
может находиться на носителе (флешке, DVD-диске), но чаще всего он размещён в
интернете. Условно репозитории можно разделить на три группы:

1. Стандартные репозитории — это репозитории, поддерживаемые
разработчиками операционных систем. Включают в себя стабильные версии
программного обеспечения. Зачастую эти версии отстают на несколько шагов от
последних версий пакетов.

2. Дополнительные репозитории — репозитории, поддерживаемые
разработчиками программного обеспечения. Включают в себя последние
стабильные версии ПО. Зачастую узкоспециализированы под конкретный пакет
и библиотеки, необходимые для этого пакета.

3. Неофициальные репозитории — репозитории, созданные сообществом или
одним человеком. Могут содержать в себе как последние стабильные, так и
тестируемые версии программного обеспечения.

Программное обеспечение в Ubuntu делится на четыре вида по типу лицензирования и
уровню поддержки:
1. Main — свободное ПО, официально поддерживаемое компанией Canonical.
2. Restricted — проприетарное ПО (в основном драйверы устройств), официально
поддерживаемое компанией Canonical.
3. Universe — свободное ПО, официально не поддерживаемое компанией
Canonical, но поддерживаемое сообществом пользователей.
4. Multiverse — проприетарное ПО, не поддерживаемое компанией Canonical.
Официальные репозитории Ubuntu делятся на следующие типы (по версиям ПО):
1. $release — пакеты на момент выхода релиза.
2. $release-security — пакеты критических обновлений безопасности.
3. $release-updates — пакеты обновления системы, то есть более поздние версии
ПО, вышедшие уже после релиза.
4. $release-backports — пакеты более новых версий ПО, которое доступно только в
нестабильных версиях Ubuntu.
5. partner — репозиторий, содержащий ПО компаний-партнёров Canonical.
Информация о подключённых репозиториях в Ubuntu хранится в каталоге /etc/apt/,
в файле sources.list. Репозитории защищают от подмены при помощи сверки
цифровых подписей репозитория и клиента. В репозитории хранится закрытая часть
ключа, у клиента — открытая часть ключа.


Варианты установки ПО в Linux

Исходный код
● требуется компиляция
● инструменты разработки
● засорение системы

Скомпилированные файлы
● нет централизованного
управления
● вопрос доверия

Пакеты
● deb, rpm, snap
● централизация
● удобство
● скорость


Классификация репозиториев

По разработчику:
● Стандартные
● Дополнительные
● Неофициальные

По лицензированию:
● main – открытое с поддержкой
● restricted – проприетарное с поддержкой
● universe – открытое без поддержки
● multiverse – проприетарное без поддержки

По версиям ПО:
● $release
● $release-security
● $release-updates
● $release-backports


Подключение дополнительного репозитория

● /etc/apt/sources.list – добавление репозитория в основной
файл
● /etc/apt/sources.list.d/*.list – добавление файла с
адресом репозитория
● deb http://адрес_репозитория версия_дистрибутива ветки
● deb http://nginx.org/packages/ubuntu jammy nginx
● sudo apt-key add repo.key – добавление ключа репозитория



Поиск пакетов и репозиториев

1. Основные (дистрибутив)
● Не требуется усилий
● Гарантированная работа
● Совместимость
● Не всегда свежие версии

2. Разработчик ПО
● Требуется поддержка
дистрибутива и версии
● Доверие к разработчику
● Возможны конфликты с
пакетами дистрибутива
● Обычно свежие версии

3. PPA (сообщество)
● Низкий уровень доверия
● Нет поддержки
● Выбор в случае отсутствия
других вариантов



Утилита apt

● Автоматизированное управление пакетами с учетом зависимостей
● Работа с удалёнными репозиториями
● apt search package_name — поиск пакета по названию и
описанию
● apt list package_name — поиск пакета по имени
● apt show package_name — посмотреть информацию о пакете
● apt install package_name -y — установить пакет
● apt remove package_name — удалить пакет, при этом сохранятся
файлы с настройками
● apt purge package_name — полностью удалить пакет, включая
конфигурационные файлы
● apt upgrade — обновить все установленные пакеты
● apt update — обновить информацию о пакетах в репозиториях,
указанных в настройках



Утилита dpkg

● Ручное управление пакетами
● Нет работы с зависимостями
● Локальные пакеты
● dpkg -l — просмотр списка пакетов
● dpkg -i package_name — установить пакет или группу пакетов
● dpkg -r package_name — удалить пакет или группу пакетов



snap-пакеты

● Все зависимости – в пакете
● Пакет изолирован от системы – разрешения
● Программы запускаются дольше
● Больше потребление ресурсов
● Нет проблем совместимости
● snap search package_name — поиск пакета
● snap install package_name — установка пакета
● snap refresh package_name — обновление пакета
● snap remove package_name — удаление пакета
● snap list — просмотр установленных пакетов



Планировщик задач cron

● Выполнение регулярных задач по расписанию
● Автоматизация обслуживания системы или приложений
● Системные задачи:
    ○ /etc/crontab
    ○ /etc/cron.d/*
● Пользовательские задачи:
    ○ /var/spool/cron/*
    ○ управление: утилита crontab


Формат задачи в cron
17 * * * * root cd / && run-parts --report /etc/cron.hourly

1. Расписание
✖ минуты
✖ часы
✖ день месяца
✖ месяц
✖ день недели

2. Пользователь
✖ для выполнения команды

3. Команда
✖ для задачи



Утилита crontab

● crontab - l вывести содержимое текущего файла расписания
● crontab -r удаление текущего файла расписания:
● crontab -e редактирование текущего файла расписания
● sudo crontab -u username – работа с файлом расписания другого пользователя

