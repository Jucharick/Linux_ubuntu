Операционные системы
Необходимая прослойка между железом и приложениями:
● Компьютеры без ОС
● 1957 – создание BESYS
● 1964 – МULTICS
● 1969 – UNICS
● 1970 – UNIX

Системные вызовы в Linux
● Управление процессами:
    ○ fork() – создание нового процесса клонированием
    ○ exec() – запуск программы
    ○ exit() – завершение программы
● Управление файлами:
    ○ open() – открыть файл
    ○ read() – прочитать данные из файла
    ○ write() – записать данные в файл
    ○ close() – закрыть файл

UNIX-подобные системы
● Коммерческие ОС
● Заложили основу для многих ОС
● Принципы UNIX
● Эпоха UNIX с 1 января 1970 года
● Позднее – стандарт POSIX

Linux
● Автор – Линус Торвальдс
● Первая версия – 1991 год
● На первых этапах связан ОС Minix
● Ядро – Linux
● Утилиты, библиотеки – проект GNU
● GNU/Linux – точное название
● Наследует многие принципы UNIX-систем 


Предшественники – UNIX-системы.
Предками Linux являются UNIX-системы. Это семейство ОС, объединенных общими
принципами работы и подходами к функциональности. В большинстве своём это
были коммерческие ОС, разработанные крупными корпорациями для работы на
железе их собственной разработки. Сюда относятся системы AIX от компании IBM,
HP-UX от компании HP, Irix от от компании Silicon Graphics (SGI), Solaris от компании
SUN.

В основе UNIX-систем заложены несколько важных принципов, которые позволили
сильно продвинуть развитие ОС и упростить жизнь разработчикам ПО. Часть
UNIX-принципов мы будем рассматривать на занятиях этого курса. Например,
важным принципом является “каждая программа должна делать что-то одно, но
делать это хорошо”. На основе этого подхода в UNIX-мире разработано огромное
количество простых утилит для решения задач (работа с файлами, текстом,
процессами), которые могут объединяться в цепочки (конвейеры) для комплексных
применений.

Коммерческая лицензия сильно ограничивала использование ОС как в учебных
целях, так и в бизнесе. Поэтому были разработаны открытые операционные системы
(open source), например FreeBSD. Такие системы можно было свободно
распространять и вносить изменения через сообщества.
Потребность в совместимости различных UNIX-систем породила стандарт POSIX
(Portable Operating System Interface — переносимый интерфейс операционных
систем), который собрал все лучшие практики в мире UNIX и позволил легко
переносить готовый софт между совместимыми ОС.
Краткая история Linux.

На базе всего наследия UNIX-систем на свет появляется Linux. Первоначально это
студенческий проект Линуса Торвальдса. На первых этапах разработки
использовалась учебная ОС Minix профессора Эндрю Таненбаума, далее её
компоненты были заменены на новые.
С точки зрения принципов построения ПО Linux наследует многие принципы
UNIX-систем, часто имеет одинаковые названия программ и параметров. Это
позволило быстро переходить на использование Linux для специалистов по
UNIX-системам.

Однако, изначально Linux представлял из себя только ядро и для полноценной
системы не хватало важных компонентов: компиляторов, оболочки, утилит. В
качестве донора этих компонентов для Linux выступает проект GNU.
Проект GNU.

Проект GNU был запущен как антипод коммерческим закрытым системам UNIX. То
есть стояла задача повторить все лучшие черты UNIX-систем, убрав лицензионные
ограничения. В основу были положены принципы открытости исходного кода и
свободного распространения ПО. Именно этот проект дал импульс развитию
движения свободного ПО, в основе которого лежит открытый исходный код и
либеральная лицензия на использование.

В проекте GNU было одного слабое место – ядро. Именно здесь как нельзя кстати
приходит Linux. В результате получаем систему GNU/Linux, однако для краткости
систему принято называть просто “Linux”.
Применение Linux в серверной среде.

Сегодня Linux является стандартом де-факто в разряде платформ для
веб-приложений. Гибкость и масштабируемость системы позволяет использовать её в
самых различных применениях: от мобильных устройств (Android) до
суперкомпьютеров. Вы наверняка столкнётесь с Linux в серверном варианте при
первых шагах в профессии. Кроме того, многие разработчики предпочитают
десктопный вариант Linux для своих рабочих машин.

Что такое дистрибутив Linux?

Ранее мы говорили про операционную систему Linux. Но также упоминали, что Linux
строго говоря это только ядро. На самом деле мы пользуемся готовыми
дистрибутивами, которые содержат все необходимые компоненты ОС. Что же такое
“дистрибутив”?

Дистрибутив Linux – это готовая к использованию сборка всех необходимых
компонентов ОС (ядро, библиотеки, оболочка, средства разработки, прикладные
программы). В зависимости от направленности дистрибутив может иметь различную
комплектацию: например, настольные версии имеют графический интерфейс, а
серверные его не имеют. Так как области применения Linux очень разнообразные,
существует огромный выбор дистрибутивов – более 200. Однако, не стоит
отчаиваться – в таком разнообразии нет большой проблемы. Большинство отдельных
“дистрибутивов” это просто клоны одной и той же системы с различной графической
оболочкой. Если же отбросить десктопные системы и говорить только о серверных,
остаётся выбор нескольких ветвей развития.

Классификация дистрибутивов Linux.

Разделяются дистрибутивы по комплекту поставки и принятой модели упаковки
программного обеспечения.
Прежде всего важна система пакетов ПО. Пакет – это готовое к установке ПО,
упакованное в архив. Система пакетов отвечает за автоматизацию установки,
удаления и конфигурации ПО. Существуют дистрибутивы без пакетных систем, но их
меньшинство.
Наиболее популярные серверные дистрибутивы можно разделить на две группы:
“Red Hat” и “Debian”.

Red Hat и Debian дистрибутивы.

Первая группа дистрибутивов может условно называться “Red Hat” – дистрибутивы,
основанные на системе пакетов RPM (red hat package manager).
Вторая группа это Debian – дистрибутивы, основанные на DEB-пакетах. Внутри этой
группы находится система Ubuntu, которую мы и будем использовать на занятиях.
В третью группу можно вынести все остальные дистрибутивы — для серверного
рынка это скорее экзотика и можно не заострять на них своё внимание.
Таким образом, если получить опыт работы с дистрибутивами из первых двух групп,
можно совершенно спокойно чувствовать себя с Linux-системами. При этом разница
между дистрибутивами будет проявляться в командах по установке пакетов и
размещению конфигурационных файлов. Также различия могут проявиться в
наличии ПО, которое поставляется в комплекте. Некоторые дистрибутивы стремятся к
стабильности и редко обновляют ПО, другие же наоборот предоставляют новейшие
версии софта. Все основные принципы и архитектура Linux остаются неизменными.

Ubuntu. Desktop, Server, LTS и обычный релиз.

Ubuntu это серия дистрибутивов, поставляемых компанией Canonical. Прежде всего
мы разделяем серверную и настольную версии. Внутри этих веток есть 2 типа
релизов: LTS (Long Term Support – длительная поддержка) и не-LTS.
LTS версия выходит каждые 2 года и отличается повышенной стабильностью и сроком
поддержки 5 лет после выхода релиза. То есть, LTS это лучший кандидат на установку
для решения критичных задач.
Не-LTS версия выходит каждые полгода и содержит новейшие версии пакетов. В
какой-то степени это экспериментальная площадка для создания следующего
LTS-дистрибутива.
Серверная система не имеет графического интерфейса и в стандартном комплекте
содержит пакеты для основных сервисов (веб-сервер, SSH, почтовый сервер,
средства контейнеризации и т.д.)
Настольный вариант Ubuntu имеет полноценный графический интерфейс,
установщик здесь также графический (в отличие от серверного). Но при этом на
десктопной системе также доступны все серверные компоненты.
Таким образом, мы можем использовать настольную версию в этом курсе, получая
преимущества графического интерфейса для первых шагов освоения системы. При
этом все серверные компоненты также будут доступны.


Использование Linux в серверной среде
● 100% TOP-500 суперкомпьютеров
● 95% самых популярных сайтов
● 90% облачной инфраструктуры
● Стандарт де-факто для веб-приложений


Установка пакетов в Ubuntu
● sudo apt update – обновить список пакетов
● sudo apt install mc – установить пакет mc
● sudo apt install openssh-server – установить SSH-сервер


Сетевые режимы VirtualBox
● Мост (bridge) – ВМ в локальной сети, прямой доступ к ВМ по IP.
● NAT – ВМ в своей сети, доступ к машине только через проброс портов.

Установка гостевых дополнений VB в Ubuntu
● sudo apt update – обновить список пакетов
● sudo apt install perl gcc make – установить пакеты
● Запуск установки гостевых дополнений
● Запускаем диске
● Запускаем как приложение
● Настраиваем общие папки и общий буфер обмена
● sudo usermod -aG vboxsf <пользователь>


# ctrl + l или clear -> очистить терминал

# вывести имя ОС
uname

# вывести имя ОС с подробностями
uname -a

# запросить имя хоста (машины)
hostnamectl

# вывести инфо о дистрибутиве
lsb_release -a

# обновить список репозиториев
sudo apt update

# установить пакет mc
sudo apt install mc

# запустить Midnight Commander
mc
